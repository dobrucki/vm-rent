@using System.Collections.Immutable
@using System.Linq
@using System.Text
@using Application.Core.Models
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Rendering
@model Application.WebApp.ViewModels.ListUserViewModel
@inject UserManager<User> UserManager;
@inject RoleManager<Role> RoleManager;

@{
     ViewBag.Title = "Users";
}
<div class="container-fluid mt-2">
     <div class="row mx-2 justify-content-between">
         <h2>Users</h2>

         <div class="col-sm-3">
             <form class="input-group" asp-controller="User" asp-action="All" method="get">
                 <input type="text" name="name" class="form-control" placeholder="Search by username">
                 <div class="input-group-append">
                     <button class="btn btn-secondary" type="submit">
                         <i class="fa fa-search"></i>
                     </button>
                 </div>
             </form>
         </div>
     </div>

     <table class="table table-hover mt-3">
         <thead>
             <th>Username</th>
             <th>Access level (roles)</th>
             <th></th>
         </thead>
         <tbody>
             @foreach (var user in Model.Users)
             {
                 <tr>
                     <td>@user.Username</td>
                     <td>
                         @{
                             string rolesNames;
                             var roles = UserManager.GetRolesAsync(user).Result;
                             rolesNames = roles.Any() ? roles.ToImmutableSortedSet().Aggregate((i, j) => i + ", " + j) : string.Empty;
                         }
                         @rolesNames
                     </td>
                     <td>
                         @* @Html.ActionLink("Details", "Details", "User", new {id = user.Id}) | *@
                         @Html.ActionLink("Add role", "AddToRole", "User", new {id = user.Id}) |
                         @Html.ActionLink("Remove role", "RemoveFromRole", "User", new {id = user.Id}) |
                         @* @Html.ActionLink("Edit", "Edit", "User", new {id = user.Id}) *@
                     </td>
                 </tr>
             }
         </tbody>
     </table>
</div>