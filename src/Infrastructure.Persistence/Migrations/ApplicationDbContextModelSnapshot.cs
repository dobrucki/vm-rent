// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Core.Domain.Customers.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("EmailAddress")
                        .HasColumnName("email_address")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_customers");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("Core.Domain.Rentals.Rental", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndTime")
                        .HasColumnName("end_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnName("start_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("VirtualMachineId")
                        .HasColumnName("virtual_machine_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_rentals");

                    b.HasIndex("CustomerId")
                        .HasName("ix_rentals_customer_id");

                    b.HasIndex("VirtualMachineId")
                        .HasName("ix_rentals_virtual_machine_id");

                    b.ToTable("rentals");
                });

            modelBuilder.Entity("Core.Domain.VirtualMachines.VirtualMachine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_virtual_machines");

                    b.ToTable("virtual_machines");
                });

            modelBuilder.Entity("Core.Domain.Rentals.Rental", b =>
                {
                    b.HasOne("Core.Domain.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("fk_rentals_customers_customer_id");

                    b.HasOne("Core.Domain.VirtualMachines.VirtualMachine", "VirtualMachine")
                        .WithMany()
                        .HasForeignKey("VirtualMachineId")
                        .HasConstraintName("fk_rentals_virtual_machines_virtual_machine_id");
                });
#pragma warning restore 612, 618
        }
    }
}
